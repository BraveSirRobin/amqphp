 * Do a "manual persistence" version of the multi-process web demo

 * Refactor the demos  to a final state - rename  files to be simpler,
   remove old crap code, move XML / HTML files in to sub-directories.

 * Review and add API support for Amqp transactions.

 * Add support for  sending multiple Amqp messages in  a single "write
   session".  May be best to use a "send stack"

 * Alter the build sequence to refuse  to build in cases where a class
   and  method  field  name   clashes.   This  should  mean  that  the
   simplified field handling in the wire\Method class is safe.

 * Consider persistence WRT Connection exit strategy helpers.

 * Ensure that  if a channel  is removed, all undelivered  and partial
   messages for that  channel are also removed.  Warn  if content gets
   discarded.

 * Figure out how to support RMQ HA queues:
   http://www.rabbitmq.com/ha.html
   In  particular:  "As  a  result  of  the  requeuing,  clients  that
   re-consume from  the queue  must be aware  that they are  likely to
   subsequently receive messages that they have seen previously"